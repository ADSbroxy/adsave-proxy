import express from "express";
import fetch from "node-fetch";
import dotenv from "dotenv";
import rateLimit from "express-rate-limit";
import cors from "cors";
import path from "path";
import { fileURLToPath } from "url";

dotenv.config();

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
const PORT = process.env.PORT || 3000;

// ุฅุนุฏุงุฏ CORS
app.use(cors());

// ุชุญุฏูุฏ ูุนุฏู ุงูุทูุจุงุช (Rate Limiting)
const limiter = rateLimit({
  windowMs: 60 * 1000, // ุฏูููุฉ ูุญุฏุฉ
  max: 5, // ุฃูุตู ุนุฏุฏ ุทูุจุงุช ูู ุงูุฏูููุฉ ููู IP
  message: "โ ุชู ุชุฌุงูุฒ ุงูุญุฏ ุงููุณููุญุ ุญุงูู ูุงุญููุง."
});
app.use(limiter);

// ูุชูุฏูู ุงููููุงุช ูู ูุฌูุฏ public
app.use(express.static(path.join(__dirname, "public")));

// ุงููุณุงุฑ ุงูุฑุฆูุณู
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "public", "index.html"));
});

// ูุณุงุฑ ุงูุชุญููู
app.get("/api/download", async (req, res) => {
  const videoUrl = req.query.url;
  if (!videoUrl) return res.status(400).json({ error: "ูุฑุฌู ุฅุฏุฎุงู ุฑุงุจุท ุงูููุฏูู" });

  try {
    const response = await fetch(`${process.env.API_BASE_URL}?token=${process.env.API_KEY}`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ url: videoUrl })
    });

    const data = await response.json();

    if (!data || !data[0] || !data[0].url)
      return res.status(500).json({ error: "ูุดู ุงูุชุญููู ุฃู ุงูุฑุงุจุท ุบูุฑ ูุฏุนูู" });

    res.json({
      success: true,
      downloadUrl: data[0].url
    });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุงุชุตุงู ุจุงูุณูุฑูุฑ" });
  }
});

// ุชุดุบูู ุงูุณูุฑูุฑ
app.listen(PORT, () => {
  console.log(`๐ AD Save Server ูุนูู ุนูู ุงููููุฐ ${PORT}`);
});